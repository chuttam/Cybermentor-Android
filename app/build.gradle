apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "ca.cybermentor.android.app"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    def proguardExceptions = [
            'proguard/exceptions-otto.pro',
            'proguard/exceptions-retrofit.pro',
            'proguard/exceptions-cybermentor.pro'
    ]

    lintOptions {
        warning 'InvalidPackage'
    }

    signingConfigs {
        release { }
    }

    buildTypes {
        release {
            minifyEnabled false     // Retrofit just doesn't play nice with Proguard. Known issues.
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguardExceptions, 'proguard/proguard-rules.pro'
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java/activities', 'src/main/java/ca.cybermentor.android.app/activities']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'org.jsoup:jsoup:1.8.1'
}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword